<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Mascota', 'doctrine');

/**
 * BaseMascota
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_mascota
 * @property string $nombre_mascota
 * @property string $tipo_mascota
 * @property Doctrine_Collection $Persona
 * 
 * @method integer             getId_mascota()     Returns the current record's "id_mascota" value
 * @method string              getNombre_mascota() Returns the current record's "nombre_mascota" value
 * @method string              getTipo_mascoTa()   Returns the current record's "tipo_mascota" value
 * @method Doctrine_Collection getPersona()        Returns the current record's "Persona" collection
 * @method Mascota             setId_mascota()     Sets the current record's "id_mascota" value
 * @method Mascota             setNombre_mascota() Sets the current record's "nombre_mascota" value
 * @method Mascota             setTipo_mascoTa()   Sets the current record's "tipo_mascota" value
 * @method Mascota             setPersona()        Sets the current record's "Persona" collection
 * 
 * @package    reto
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMascota extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mascota');
        $this->hasColumn('id_mascota', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre_mascota', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('tipo_mascota', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Persona', array(
             'local' => 'id_mascota',
             'foreign' => 'id_mascota'));
    }
}